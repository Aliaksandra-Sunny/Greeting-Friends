{"version":3,"sources":["AboutMe/AboutMe.module.css","App.module.css","Greeting/Greeting.module.css","Friends/Friend/Friend.module.css","AboutMe/Name/Name.module.css","AboutMe/Skills/Skill/Skill.module.css","AboutMe/Skills/Skills.module.css","Greeting/Greeting.jsx","Friends/Friend/Friend.jsx","Friends/Friends.jsx","AboutMe/Name/Name.jsx","AboutMe/Skills/Skill/Skill.jsx","AboutMe/Skills/Skills.jsx","AboutMe/AboutMe.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Greeting","props","onClickHello","newNameRef","current","value","newName","addFriend","alert","render","className","style","greetingBox","ref","placeholder","onClick","React","createRef","Component","Friend","friend","Friends","friendsItems","friends","map","Name","myName","Skill","skillBox","skill","Skills","skillsElements","mySkills","styleMap","AboutMe","aboutMe","name","skills","App","state","newFriend","newFriends","setState","aboutYou","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fed8cd52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe\":\"AboutMe_aboutMe__13E41\",\"name\":\"AboutMe_name__3o9hq\",\"skills\":\"AboutMe_skills__3ft6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1KRHl\",\"aboutYou\":\"App_aboutYou__1YYJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greetingBox\":\"Greeting_greetingBox__3tldH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__1wZoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myName\":\"Name_myName__2kPrc\",\"blink\":\"Name_blink__p-k7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skillBox\":\"Skill_skillBox__1BDZT\",\"blink\":\"Skill_blink__3yJeF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styleMap\":\"Skills_styleMap__3OKYo\"};","import React from 'react';\nimport style from \"./Greeting.module.css\"\n\nclass Greeting extends React.Component {\n    constructor(props){\n        super(props);\n        this.newNameRef=React.createRef();\n    }\n\n    onClickHello=()=>{\n        if(this.newNameRef.current.value!==\"\"){\n            let newName=this.newNameRef.current.value;\n            this.newNameRef.current.value=\"\";\n            this.props.addFriend(newName);\n            alert(\"Халлёу, \"+newName+\"! Теперь мы друзья:)\");\n\n        }\n        else alert(\"Не знаю, как тебя зовут:(\");\n\n    }\n    render = () => {\n        return (\n            <div className={style.greetingBox}>\n                <input ref={this.newNameRef}  placeholder=\"Представься, пожалуйста\"/>\n                <button onClick={this.onClickHello}>Йоу</button>\n            </div>\n        );\n    }\n}\n\nexport default Greeting;\n\n","import React from 'react';\nimport style from \"./Friend.module.css\"\n\nclass Friend extends React.Component {\n    render=(props)=>{\n        return(\n            <div className={style.friend}>\n                {this.props.friend}\n            </div>\n        )\n    }\n}\n\nexport default Friend;\n\n","import React from 'react';\nimport style from \"./Friends.module.css\"\nimport Friend from \"./Friend/Friend\";\n\nclass Friends extends React.Component {\n    render = (props) => {\n        let friendsItems = this.props.friends.map((friend) => {\n            return (\n                <Friend friend={friend}/>\n            )\n        });\n        return (\n            <div className={style.friends}>\n                <h3>My friends:</h3>\n                {friendsItems}\n            </div>\n        )\n    }\n}\n\nexport default Friends;\n\n","import React from 'react';\nimport style from \"./Name.module.css\"\n\nclass Name extends React.Component {\n    render = () => {\n        return (\n            <div className={style.myName}>\n                    {this.props.myName}\n            </div>\n        );\n    }\n}\n\nexport default Name;\n\n","import React from 'react';\nimport style from \"./Skill.module.css\"\n\nclass Skill extends React.Component {\n    render = () => {\n        return(\n                <div className={style.skillBox}>\n                    <span>{this.props.skill}</span>\n                </div>\n        );\n    }\n}\n\nexport default Skill;\n\n","import React from 'react';\nimport Skill from \"./Skill/Skill\";\nimport style from \"./Skills.module.css\"\n\nclass Skills extends React.Component {\n    render = () => {\n        let skillsElements=this.props.mySkills.map((skill)=>{\n            return(\n                <Skill skill={skill}/>\n            )\n        });\n        return (\n            <div className={style.styleMap}>\n                {skillsElements}\n            </div>\n        );\n    }\n}\n\nexport default Skills;\n\n","import React from 'react';\nimport style from \"./AboutMe.module.css\";\nimport Name from \"./Name/Name\";\nimport Skills from \"./Skills/Skills\";\n\nclass AboutMe extends React.Component {\n    render = () => {\n        return(\n            <div className={style.aboutMe}>\n                <p className={style.name}>Привет, меня зовут </p>\n                <Name myName={this.props.aboutMe.myName}/>\n                <p className={style.skills}>И вот 3 главные качества, которыми меня можно охарактеризовать:</p>\n                <Skills mySkills={this.props.aboutMe.mySkills}/>\n            </div>\n        );\n    }\n}\n\nexport default AboutMe;\n\n","import React from 'react';\nimport style from './App.module.css';\nimport Greeting from \"./Greeting/Greeting\";\nimport Friends from \"./Friends/Friends\";\nimport AboutMe from \"./AboutMe/AboutMe\";\n\nclass App extends React.Component {\n\n    state = {\n        aboutMe: {\n            myName: \"Belyavskaya Alexandra\",\n            mySkills: [\"communicative\", \"optimistic\", \"infantile\"],\n        },\n        friends: [],\n\n    }\n\n    addFriend = (newFriend) => {\n        let newFriends = [...this.state.friends, newFriend]\n        this.setState({\n                friends: newFriends,\n            }\n        )\n    }\n\n    render = () => {\n        return (\n            <div className={style.App}>\n                <AboutMe aboutMe={this.state.aboutMe}/>\n                <div className={style.aboutYou}>\n                    <Greeting addFriend={this.addFriend}/>\n                    <Friends friends={this.state.friends}/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}